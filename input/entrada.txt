class MiClase:
    def __init__(self, nombre):
        self.nombre = nombre

    def saludar(self,nicol):
        print("Hola, mi nombre es", self.nombre)


while i>3:
    i=+1



def es_primo(numero):
    a=3
    if numero<2 :
        a=3
        a=3
        return False
    elif numero<2 :
         a=3
         a=3
         return False
    else:
        print(a)
    for i in range(2, int(numero**0.5) + 1):
        if numero % i == 0:
            return False
    return True

def generar_primos(rango_inicial, rango_final):
    primos = []
    for numero in range(rango_inicial, rango_final + 1):
        if es_primo(numero):
            primos.append(numero)
    return primos

rango_inicial = int(input("Ingrese el rango inicial: "))
rango_final = int(input("Ingrese el rango final: "))

lista_primos = generar_primos(rango_inicial, rango_final)

print("Números primos en el rango {}: {}".format((rango_inicial, rango_final), lista_primos))

if a<5:
    try:
        # Bloque de código donde se pueden producir excepciones
        resultado = 10 / 0  # Intentamos dividir entre cero, lo cual generará una excepción
        print("El resultado es:", resultado)  # Esta línea no se ejecutará debido a la excepción

    except ZeroDivisionError:
        # Manejo de la excepción específica ZeroDivisionError
        print("Error: No se puede dividir entre cero")

    except Exception as e:
        # Manejo de cualquier otra excepción no capturada por las cláusulas anteriores
        print("Ocurrió un error:", str(e))

    finally:
        # comentario
        print("Fin del programa")